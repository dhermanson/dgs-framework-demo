plugins {
	id 'org.springframework.boot' version '3.1.2'
//	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	// id 'java'
//	id 'com.netflix.dgs.codegen' version '5.4.0'
	id 'org.jetbrains.kotlin.jvm' version '1.9.0'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.0'
	id 'com.netflix.dgs.codegen' version '5.12.4'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
// sourceCompatibility = '17'



repositories {
	mavenCentral()
}

dependencies {
	implementation platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:7.3.6")
	implementation "com.netflix.graphql.dgs:graphql-dgs-webflux-starter"
	implementation "org.springframework.boot:spring-boot-starter"
	implementation "org.jetbrains.kotlin:kotlin-reflect"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation "io.vertx:vertx-core:4.4.4"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
}

tasks.named('test') {
	useJUnitPlatform()
}

generateJava{
	schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
	packageName = 'com.dt2js.dgs' // The package name to use to generate sources
	generateClient = true // Enable generating the type safe query API
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
